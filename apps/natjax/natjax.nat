impl 0 0 1.
impl 0 1 1.
impl 1 0 0.
impl 1 1 1.

nand 0 0 1.
nand 0 1 1.
nand 1 0 1.
nand 1 1 0.

xor 0 0 0.
xor 0 1 1.
xor 1 0 1.
xor 1 1 0.

iter N Op X Y:
  iter_op N Op () E 0 Y,
  tuple E X.

iter_op 0 _Op E E R R.
iter_op I Op  E1 E2 R1 R3 :
   @ I > 0,
   - I 1 J,
   Op X R1 R2,
   + X X XX, - XX 1.0 X1,
   iter_op J Op (X1 E1) E2 R2 R3.

dataset N Op Xss (Ys):
  findall (X Y)  (iter N Op X Y) XssYsList,
  to_pairs XssYsList XssList YsList,
  tuple XssList Xss,
  tuple YsList Ys.

to_pairs () () ().
to_pairs ((Xs Y)  Zss) (Xs Xss) (Y Ys) :
    to_pairs Zss Xss Ys.

to_jax_dataset Xss Ys Xtr Xt Ytr Yt:
   `array Xss X,
   `array Ys Y0,
   `transpose Y0 Y,
   `split X Y 0 0.1 (Xtr Xt Ytr Yt),
   list (X Xt Y Yt) Vals,
   maplist (` size) Vals Sizes,
   #print sizes are Sizes.


hidden_sizes N (M MM M N 1):
     * 2 N M, * 4 N MM.

run N Op Seed Epochs Loss Acc LossT AccT:
   dataset N Op Xss Ys,
   to_jax_dataset Xss Ys X Xt Y Yt,
   hidden_sizes N Sizes,
   `init_weights N Sizes Seed Weights,
   eq Learning_rate 0.01,
   `train_model Weights X Y Learning_rate Epochs Model,
   `test_model Model X Y (Loss Acc),
   `test_model Model Xt Yt (LossT AccT) .


run with Op:
   run 10 Op 0 1000 Loss Acc LossT AccT,
   #print train loss = Loss,
   #print train accuracy = Acc,
   #print test loss = LossT,
   #print test accuracy = AccT.


go: run with xor.
go1 : run with nand.
go2 : run with impl.


tt1: iter 2 xor E R, #print result E R, fail.

tt2 : dataset 1 nand Xss Ys, #print Xss Ys, fail.

tt: $xor F, #test_natjax 10 F 0,fail.

test_alt_run N OpName _Epochs Loss Acc  LossT AccT:
   $ OpName Op,
   eq Seed 0,
   `load_dataset N Op Seed  (Data Layer_sizes Epochs),
   eq Data (X Xt Y Yt),
   #print 'X',
   #print X,
   #print 'Y',
   #print Y,
   `init_weights N Layer_sizes Seed Weights,
   eq Learning_rate 0.01,
   `train_model Weights X Y Learning_rate Epochs Model,
   `test_model Model X Y (Loss Acc),
   `test_model Model Xt Yt (LossT AccT) .

alt:
   test_alt_run 10 xor 1000 Loss Acc LossT AccT,
   #print train loss = Loss,
   #print train accuracy = Acc,
   #print test loss = LossT,
   #print test accuracy = AccT.
